#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NationPost.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BlogDatabase")]
	public partial class BlogDBContextLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArticleRating(ArticleRating instance);
    partial void UpdateArticleRating(ArticleRating instance);
    partial void DeleteArticleRating(ArticleRating instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    partial void InsertArticleTag(ArticleTag instance);
    partial void UpdateArticleTag(ArticleTag instance);
    partial void DeleteArticleTag(ArticleTag instance);
    partial void InsertArticleType(ArticleType instance);
    partial void UpdateArticleType(ArticleType instance);
    partial void DeleteArticleType(ArticleType instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    #endregion
		
		public BlogDBContextLinqDataContext() : 
				base(global::NationPost.DAL.Properties.Settings.Default.BlogDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDBContextLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDBContextLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDBContextLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlogDBContextLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ArticleRating> ArticleRatings
		{
			get
			{
				return this.GetTable<ArticleRating>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Article> Articles
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
		
		public System.Data.Linq.Table<ArticleTag> ArticleTags
		{
			get
			{
				return this.GetTable<ArticleTag>();
			}
		}
		
		public System.Data.Linq.Table<ArticleType> ArticleTypes
		{
			get
			{
				return this.GetTable<ArticleType>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NP.ArticleRatings")]
	public partial class ArticleRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArticleRatingId;
		
		private System.Guid _ArticleId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private int _Rating;
		
		private int _ratingType;
		
		private string _IPAdditionalInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleRatingIdChanging(int value);
    partial void OnArticleRatingIdChanged();
    partial void OnArticleIdChanging(System.Guid value);
    partial void OnArticleIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnratingTypeChanging(int value);
    partial void OnratingTypeChanged();
    partial void OnIPAdditionalInfoChanging(string value);
    partial void OnIPAdditionalInfoChanged();
    #endregion
		
		public ArticleRating()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleRatingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArticleRatingId
		{
			get
			{
				return this._ArticleRatingId;
			}
			set
			{
				if ((this._ArticleRatingId != value))
				{
					this.OnArticleRatingIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleRatingId = value;
					this.SendPropertyChanged("ArticleRatingId");
					this.OnArticleRatingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ratingType", DbType="Int NOT NULL")]
		public int ratingType
		{
			get
			{
				return this._ratingType;
			}
			set
			{
				if ((this._ratingType != value))
				{
					this.OnratingTypeChanging(value);
					this.SendPropertyChanging();
					this._ratingType = value;
					this.SendPropertyChanged("ratingType");
					this.OnratingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAdditionalInfo", DbType="NVarChar(MAX)")]
		public string IPAdditionalInfo
		{
			get
			{
				return this._IPAdditionalInfo;
			}
			set
			{
				if ((this._IPAdditionalInfo != value))
				{
					this.OnIPAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._IPAdditionalInfo = value;
					this.SendPropertyChanged("IPAdditionalInfo");
					this.OnIPAdditionalInfoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NP.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Password;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedOn;
		
		private string _AboutMe;
		
		private bool _IsAboutMeVisible;
		
		private string _FacebookLink;
		
		private bool _IsFacebookLinkVisible;
		
		private string _TwitterLink;
		
		private bool _IsTwitterLinkVisible;
		
		private string _Contact;
		
		private bool _IsContactVisible;
		
		private string _Token;
		
		private string _GoogleLink;
		
		private bool _IsGoogleLinkVisible;
		
		private string _UserName;
		
		private EntitySet<Article> _Articles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnAboutMeChanging(string value);
    partial void OnAboutMeChanged();
    partial void OnIsAboutMeVisibleChanging(bool value);
    partial void OnIsAboutMeVisibleChanged();
    partial void OnFacebookLinkChanging(string value);
    partial void OnFacebookLinkChanged();
    partial void OnIsFacebookLinkVisibleChanging(bool value);
    partial void OnIsFacebookLinkVisibleChanged();
    partial void OnTwitterLinkChanging(string value);
    partial void OnTwitterLinkChanged();
    partial void OnIsTwitterLinkVisibleChanging(bool value);
    partial void OnIsTwitterLinkVisibleChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnIsContactVisibleChanging(bool value);
    partial void OnIsContactVisibleChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnGoogleLinkChanging(string value);
    partial void OnGoogleLinkChanged();
    partial void OnIsGoogleLinkVisibleChanging(bool value);
    partial void OnIsGoogleLinkVisibleChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public User()
		{
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(15)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(15)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(350)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutMe", DbType="NVarChar(MAX)")]
		public string AboutMe
		{
			get
			{
				return this._AboutMe;
			}
			set
			{
				if ((this._AboutMe != value))
				{
					this.OnAboutMeChanging(value);
					this.SendPropertyChanging();
					this._AboutMe = value;
					this.SendPropertyChanged("AboutMe");
					this.OnAboutMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAboutMeVisible", DbType="Bit NOT NULL")]
		public bool IsAboutMeVisible
		{
			get
			{
				return this._IsAboutMeVisible;
			}
			set
			{
				if ((this._IsAboutMeVisible != value))
				{
					this.OnIsAboutMeVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsAboutMeVisible = value;
					this.SendPropertyChanged("IsAboutMeVisible");
					this.OnIsAboutMeVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacebookLink", DbType="NVarChar(MAX)")]
		public string FacebookLink
		{
			get
			{
				return this._FacebookLink;
			}
			set
			{
				if ((this._FacebookLink != value))
				{
					this.OnFacebookLinkChanging(value);
					this.SendPropertyChanging();
					this._FacebookLink = value;
					this.SendPropertyChanged("FacebookLink");
					this.OnFacebookLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFacebookLinkVisible", DbType="Bit NOT NULL")]
		public bool IsFacebookLinkVisible
		{
			get
			{
				return this._IsFacebookLinkVisible;
			}
			set
			{
				if ((this._IsFacebookLinkVisible != value))
				{
					this.OnIsFacebookLinkVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsFacebookLinkVisible = value;
					this.SendPropertyChanged("IsFacebookLinkVisible");
					this.OnIsFacebookLinkVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwitterLink", DbType="NVarChar(MAX)")]
		public string TwitterLink
		{
			get
			{
				return this._TwitterLink;
			}
			set
			{
				if ((this._TwitterLink != value))
				{
					this.OnTwitterLinkChanging(value);
					this.SendPropertyChanging();
					this._TwitterLink = value;
					this.SendPropertyChanged("TwitterLink");
					this.OnTwitterLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTwitterLinkVisible", DbType="Bit NOT NULL")]
		public bool IsTwitterLinkVisible
		{
			get
			{
				return this._IsTwitterLinkVisible;
			}
			set
			{
				if ((this._IsTwitterLinkVisible != value))
				{
					this.OnIsTwitterLinkVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsTwitterLinkVisible = value;
					this.SendPropertyChanged("IsTwitterLinkVisible");
					this.OnIsTwitterLinkVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(MAX)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContactVisible", DbType="Bit NOT NULL")]
		public bool IsContactVisible
		{
			get
			{
				return this._IsContactVisible;
			}
			set
			{
				if ((this._IsContactVisible != value))
				{
					this.OnIsContactVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsContactVisible = value;
					this.SendPropertyChanged("IsContactVisible");
					this.OnIsContactVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(MAX)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoogleLink", DbType="NVarChar(MAX)")]
		public string GoogleLink
		{
			get
			{
				return this._GoogleLink;
			}
			set
			{
				if ((this._GoogleLink != value))
				{
					this.OnGoogleLinkChanging(value);
					this.SendPropertyChanging();
					this._GoogleLink = value;
					this.SendPropertyChanged("GoogleLink");
					this.OnGoogleLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGoogleLinkVisible", DbType="Bit NOT NULL")]
		public bool IsGoogleLinkVisible
		{
			get
			{
				return this._IsGoogleLinkVisible;
			}
			set
			{
				if ((this._IsGoogleLinkVisible != value))
				{
					this.OnIsGoogleLinkVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsGoogleLinkVisible = value;
					this.SendPropertyChanged("IsGoogleLinkVisible");
					this.OnIsGoogleLinkVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Article", Storage="_Articles", ThisKey="UserId", OtherKey="CreatedBy_UserId")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NP.Articles")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ArticleId;
		
		private System.DateTime _CreatedOn;
		
		private string _Title;
		
		private string _Description;
		
		private string _Summary;
		
		private string _Body;
		
		private bool _IsValid;
		
		private bool _IsVisible;
		
		private int _Rating;
		
		private int _TotalRating;
		
		private int _Like;
		
		private int _Dislike;
		
		private string _Longtitude;
		
		private string _Latitude;
		
		private string _Country;
		
		private string _administrative_area_level_1;
		
		private string _administrative_area_level_2;
		
		private string _locality;
		
		private string _sublocality_level_1;
		
		private string _sublocality_level_2;
		
		private string _sublocality_level_3;
		
		private string _IP;
		
		private int _ArticleTypeId_ArticleTypeId;
		
		private System.Guid _CreatedBy_UserId;
		
		private EntitySet<ArticleTag> _ArticleTags;
		
		private EntityRef<User> _User;
		
		private EntityRef<ArticleType> _ArticleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleIdChanging(System.Guid value);
    partial void OnArticleIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnIsValidChanging(bool value);
    partial void OnIsValidChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnTotalRatingChanging(int value);
    partial void OnTotalRatingChanged();
    partial void OnLikeChanging(int value);
    partial void OnLikeChanged();
    partial void OnDislikeChanging(int value);
    partial void OnDislikeChanged();
    partial void OnLongtitudeChanging(string value);
    partial void OnLongtitudeChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void Onadministrative_area_level_1Changing(string value);
    partial void Onadministrative_area_level_1Changed();
    partial void Onadministrative_area_level_2Changing(string value);
    partial void Onadministrative_area_level_2Changed();
    partial void OnlocalityChanging(string value);
    partial void OnlocalityChanged();
    partial void Onsublocality_level_1Changing(string value);
    partial void Onsublocality_level_1Changed();
    partial void Onsublocality_level_2Changing(string value);
    partial void Onsublocality_level_2Changed();
    partial void Onsublocality_level_3Changing(string value);
    partial void Onsublocality_level_3Changed();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnArticleTypeId_ArticleTypeIdChanging(int value);
    partial void OnArticleTypeId_ArticleTypeIdChanged();
    partial void OnCreatedBy_UserIdChanging(System.Guid value);
    partial void OnCreatedBy_UserIdChanged();
    #endregion
		
		public Article()
		{
			this._ArticleTags = new EntitySet<ArticleTag>(new Action<ArticleTag>(this.attach_ArticleTags), new Action<ArticleTag>(this.detach_ArticleTags));
			this._User = default(EntityRef<User>);
			this._ArticleType = default(EntityRef<ArticleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX)")]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit NOT NULL")]
		public bool IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this.OnIsValidChanging(value);
					this.SendPropertyChanging();
					this._IsValid = value;
					this.SendPropertyChanged("IsValid");
					this.OnIsValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRating", DbType="Int NOT NULL")]
		public int TotalRating
		{
			get
			{
				return this._TotalRating;
			}
			set
			{
				if ((this._TotalRating != value))
				{
					this.OnTotalRatingChanging(value);
					this.SendPropertyChanging();
					this._TotalRating = value;
					this.SendPropertyChanged("TotalRating");
					this.OnTotalRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Like]", Storage="_Like", DbType="Int NOT NULL")]
		public int Like
		{
			get
			{
				return this._Like;
			}
			set
			{
				if ((this._Like != value))
				{
					this.OnLikeChanging(value);
					this.SendPropertyChanging();
					this._Like = value;
					this.SendPropertyChanged("Like");
					this.OnLikeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dislike", DbType="Int NOT NULL")]
		public int Dislike
		{
			get
			{
				return this._Dislike;
			}
			set
			{
				if ((this._Dislike != value))
				{
					this.OnDislikeChanging(value);
					this.SendPropertyChanging();
					this._Dislike = value;
					this.SendPropertyChanged("Dislike");
					this.OnDislikeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longtitude", DbType="NVarChar(MAX)")]
		public string Longtitude
		{
			get
			{
				return this._Longtitude;
			}
			set
			{
				if ((this._Longtitude != value))
				{
					this.OnLongtitudeChanging(value);
					this.SendPropertyChanging();
					this._Longtitude = value;
					this.SendPropertyChanged("Longtitude");
					this.OnLongtitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(MAX)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(MAX)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_administrative_area_level_1", DbType="NVarChar(MAX)")]
		public string administrative_area_level_1
		{
			get
			{
				return this._administrative_area_level_1;
			}
			set
			{
				if ((this._administrative_area_level_1 != value))
				{
					this.Onadministrative_area_level_1Changing(value);
					this.SendPropertyChanging();
					this._administrative_area_level_1 = value;
					this.SendPropertyChanged("administrative_area_level_1");
					this.Onadministrative_area_level_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_administrative_area_level_2", DbType="NVarChar(MAX)")]
		public string administrative_area_level_2
		{
			get
			{
				return this._administrative_area_level_2;
			}
			set
			{
				if ((this._administrative_area_level_2 != value))
				{
					this.Onadministrative_area_level_2Changing(value);
					this.SendPropertyChanging();
					this._administrative_area_level_2 = value;
					this.SendPropertyChanged("administrative_area_level_2");
					this.Onadministrative_area_level_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locality", DbType="NVarChar(MAX)")]
		public string locality
		{
			get
			{
				return this._locality;
			}
			set
			{
				if ((this._locality != value))
				{
					this.OnlocalityChanging(value);
					this.SendPropertyChanging();
					this._locality = value;
					this.SendPropertyChanged("locality");
					this.OnlocalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sublocality_level_1", DbType="NVarChar(MAX)")]
		public string sublocality_level_1
		{
			get
			{
				return this._sublocality_level_1;
			}
			set
			{
				if ((this._sublocality_level_1 != value))
				{
					this.Onsublocality_level_1Changing(value);
					this.SendPropertyChanging();
					this._sublocality_level_1 = value;
					this.SendPropertyChanged("sublocality_level_1");
					this.Onsublocality_level_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sublocality_level_2", DbType="NVarChar(MAX)")]
		public string sublocality_level_2
		{
			get
			{
				return this._sublocality_level_2;
			}
			set
			{
				if ((this._sublocality_level_2 != value))
				{
					this.Onsublocality_level_2Changing(value);
					this.SendPropertyChanging();
					this._sublocality_level_2 = value;
					this.SendPropertyChanged("sublocality_level_2");
					this.Onsublocality_level_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sublocality_level_3", DbType="NVarChar(MAX)")]
		public string sublocality_level_3
		{
			get
			{
				return this._sublocality_level_3;
			}
			set
			{
				if ((this._sublocality_level_3 != value))
				{
					this.Onsublocality_level_3Changing(value);
					this.SendPropertyChanging();
					this._sublocality_level_3 = value;
					this.SendPropertyChanged("sublocality_level_3");
					this.Onsublocality_level_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(MAX)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeId_ArticleTypeId", DbType="Int NOT NULL")]
		public int ArticleTypeId_ArticleTypeId
		{
			get
			{
				return this._ArticleTypeId_ArticleTypeId;
			}
			set
			{
				if ((this._ArticleTypeId_ArticleTypeId != value))
				{
					if (this._ArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleTypeId_ArticleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleTypeId_ArticleTypeId = value;
					this.SendPropertyChanged("ArticleTypeId_ArticleTypeId");
					this.OnArticleTypeId_ArticleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatedBy_UserId
		{
			get
			{
				return this._CreatedBy_UserId;
			}
			set
			{
				if ((this._CreatedBy_UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedBy_UserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy_UserId = value;
					this.SendPropertyChanged("CreatedBy_UserId");
					this.OnCreatedBy_UserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleTag", Storage="_ArticleTags", ThisKey="ArticleId", OtherKey="article_ArticleId")]
		public EntitySet<ArticleTag> ArticleTags
		{
			get
			{
				return this._ArticleTags;
			}
			set
			{
				this._ArticleTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Article", Storage="_User", ThisKey="CreatedBy_UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._CreatedBy_UserId = value.UserId;
					}
					else
					{
						this._CreatedBy_UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleType_Article", Storage="_ArticleType", ThisKey="ArticleTypeId_ArticleTypeId", OtherKey="ArticleTypeId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ArticleType ArticleType
		{
			get
			{
				return this._ArticleType.Entity;
			}
			set
			{
				ArticleType previousValue = this._ArticleType.Entity;
				if (((previousValue != value) 
							|| (this._ArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleType.Entity = null;
						previousValue.Articles.Remove(this);
					}
					this._ArticleType.Entity = value;
					if ((value != null))
					{
						value.Articles.Add(this);
						this._ArticleTypeId_ArticleTypeId = value.ArticleTypeId;
					}
					else
					{
						this._ArticleTypeId_ArticleTypeId = default(int);
					}
					this.SendPropertyChanged("ArticleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArticleTags(ArticleTag entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_ArticleTags(ArticleTag entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NP.ArticleTags")]
	public partial class ArticleTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArticleTagId;
		
		private System.Nullable<System.Guid> _article_ArticleId;
		
		private System.Nullable<int> _Tag_Id;
		
		private EntityRef<Article> _Article;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleTagIdChanging(int value);
    partial void OnArticleTagIdChanged();
    partial void Onarticle_ArticleIdChanging(System.Nullable<System.Guid> value);
    partial void Onarticle_ArticleIdChanged();
    partial void OnTag_IdChanging(System.Nullable<int> value);
    partial void OnTag_IdChanged();
    #endregion
		
		public ArticleTag()
		{
			this._Article = default(EntityRef<Article>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTagId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArticleTagId
		{
			get
			{
				return this._ArticleTagId;
			}
			set
			{
				if ((this._ArticleTagId != value))
				{
					this.OnArticleTagIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleTagId = value;
					this.SendPropertyChanged("ArticleTagId");
					this.OnArticleTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_article_ArticleId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> article_ArticleId
		{
			get
			{
				return this._article_ArticleId;
			}
			set
			{
				if ((this._article_ArticleId != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onarticle_ArticleIdChanging(value);
					this.SendPropertyChanging();
					this._article_ArticleId = value;
					this.SendPropertyChanged("article_ArticleId");
					this.Onarticle_ArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag_Id", DbType="Int")]
		public System.Nullable<int> Tag_Id
		{
			get
			{
				return this._Tag_Id;
			}
			set
			{
				if ((this._Tag_Id != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTag_IdChanging(value);
					this.SendPropertyChanging();
					this._Tag_Id = value;
					this.SendPropertyChanged("Tag_Id");
					this.OnTag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleTag", Storage="_Article", ThisKey="article_ArticleId", OtherKey="ArticleId", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.ArticleTags.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.ArticleTags.Add(this);
						this._article_ArticleId = value.ArticleId;
					}
					else
					{
						this._article_ArticleId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ArticleTag", Storage="_Tag", ThisKey="Tag_Id", OtherKey="Id", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.ArticleTags.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.ArticleTags.Add(this);
						this._Tag_Id = value.Id;
					}
					else
					{
						this._Tag_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NP.ArticleType")]
	public partial class ArticleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArticleTypeId;
		
		private string _Name;
		
		private EntitySet<Article> _Articles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleTypeIdChanging(int value);
    partial void OnArticleTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ArticleType()
		{
			this._Articles = new EntitySet<Article>(new Action<Article>(this.attach_Articles), new Action<Article>(this.detach_Articles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArticleTypeId
		{
			get
			{
				return this._ArticleTypeId;
			}
			set
			{
				if ((this._ArticleTypeId != value))
				{
					this.OnArticleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleTypeId = value;
					this.SendPropertyChanged("ArticleTypeId");
					this.OnArticleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleType_Article", Storage="_Articles", ThisKey="ArticleTypeId", OtherKey="ArticleTypeId_ArticleTypeId")]
		public EntitySet<Article> Articles
		{
			get
			{
				return this._Articles;
			}
			set
			{
				this._Articles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.ArticleType = this;
		}
		
		private void detach_Articles(Article entity)
		{
			this.SendPropertyChanging();
			entity.ArticleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NP.Tag")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<ArticleTag> _ArticleTags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Tag()
		{
			this._ArticleTags = new EntitySet<ArticleTag>(new Action<ArticleTag>(this.attach_ArticleTags), new Action<ArticleTag>(this.detach_ArticleTags));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ArticleTag", Storage="_ArticleTags", ThisKey="Id", OtherKey="Tag_Id")]
		public EntitySet<ArticleTag> ArticleTags
		{
			get
			{
				return this._ArticleTags;
			}
			set
			{
				this._ArticleTags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArticleTags(ArticleTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_ArticleTags(ArticleTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
	}
}
#pragma warning restore 1591
